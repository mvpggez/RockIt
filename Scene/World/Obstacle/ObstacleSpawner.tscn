[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends Spatial

export var min_height = 0.0 #minimum height for the obstacles, 0.0, obstacles will be spawned on launch
export var max_height = 1000.0 #maximum height for the obstacles
export var max_count = 5 #Maximum count of obstacles in the spawn area
export var min_distance = 1.0 #minimum distance between two obstacles, not active!
export (Resource) var obstacle_resource = null 
export var rocket_distance_near = 30 #Begin of the spawn-area
export var rocket_distance_far = 70 #End of the spawn-area, begin of the despawn area

var current_count = 0

func _ready():
	randomize()
	if min_height == 0:
		for i in range(max_count):
			get_parent().spawn_obstacle(self, obstacle_resource, rocket_distance_near, 5)

	
func free_obstacle(obstacle):
	current_count-=1
	for child in obstacle.get_children():
		if child is CollisionShape:
			child.disabled = true
	obstacle.queue_free()
	
func _physics_process(delta):
	var position = get_node(\"../../Rocket\").get_global_transform().origin
	#spawn on given condition
	if position.y > min_height and position.y < max_height and current_count<max_count:
		for i in range(max_count-current_count):
			get_parent().spawn_obstacle(self, obstacle_resource, rocket_distance_far, rocket_distance_near)
"

[node name="ObstacleSpawner" type="Spatial"]
script = SubResource( 1 )
